---
- name: install packages
  apt:
    name: "{{ packages }}"
    update_cache: true
  vars:
    packages:
    - acpi
    - awesome
    - cpufrequtils
    - cups
    - fonts-noto
    - gnupg2
    - gthumb
    - i3lock
    - imagemagick
    - kcolorchooser
    - libnotify-bin
    - moreutils
    - mosh
    - nmon
    - okular
    - paperkey
    - pavucontrol
    - pigz
    - printer-driver-cups-pdf
    - python3-apt
    - python3-gpg
    - rxvt-unicode-256color
    - screen
    - scrot
    - speedtest-cli
    - suckless-tools
    - tree
    - xinput
    - xfe
    - xsel
    - zip
  become: yes

- name: install Ubuntu packages
  when: ansible_facts['distribution'] == "Ubuntu"
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - firefox
    - oxygen-cursor-theme-extra
    - screenruler  # no Debian equivalent after jessie
  become: yes

- name: install Debian packages
  when: ansible_facts['distribution'] == "Debian"
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - firefox-esr
    - oxygencursors
  become: yes

- name: create display manager custom XSession config
  copy:
    dest: /usr/share/xsessions/xsession.desktop
    content: |
      [Desktop Entry]
      Name=XSession
      Comment=This session uses the custom xsession file
      Exec=/etc/X11/Xsession
      Type=Application
  become: yes

- name: create dotfile symlinks
  file:
    state: link
    src: "/home/{{ ansible_user }}/dotfiles/{{ item }}"
    path: "/home/{{ ansible_user }}/.{{ item }}"
    force: yes
  loop:
    - bash_profile
    - bashrc
    - clang-format
    - emacs.el
    - profile
    - vimrc
    - xinitrc
    - xsession

- name: create xsessionrc symlink
  file:
    state: link
    src: "/home/{{ ansible_user }}/dotfiles/xsessionrc.{{ inventory_hostname }}"
    path: "/home/{{ ansible_user }}/.xsessionrc"

- name: create Xresources symlink
  file:
    state: link
    src: "/home/{{ ansible_user }}/dotfiles/Xresources.{{ inventory_hostname }}"
    path: "/home/{{ ansible_user }}/.Xresources"

- name: create awesome config symlink
  file:
    state: link
    src: "/home/{{ ansible_user }}/dotfiles/awesome"
    path: "/home/{{ ansible_user }}/.config/awesome"

- name: create /mnt/usb directory
  file:
    state: directory
    path: /mnt/usb
  become: yes

- name: check if Dropbox installed
  shell: which dropbox
  register: has_dropbox
  ignore_errors: yes

- name: install Dropbox
  when: has_dropbox.rc != 0
  apt:
    deb: https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2020.03.04_amd64.deb
  become: yes

- name: "add {{ ansible_user }} to admin groups"
  user:
    name: "{{ ansible_user }}"
    append: yes
    groups:
      - lpadmin
      - dialout
  become: yes
